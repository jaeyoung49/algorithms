**Multi Sort ( 분할정복법 )**
	: Divide and Conquer
	
	[1] 정의
		- 분할 : 해결하고자 하는 문제를 작은 크기의 동일한 문제들로 분할
		- 정복 : 각각의 작은 문제를 순환적으로 해결
		- 합병 : 작은 문제의 해를 합하여(Merge) 원래 문제에 대한 해를 구함
	
	[2] 종류
		- Merge Sort
		- Quick Sort
		- Heap Sort
		
	
**Merge Sort ( 합병정렬 )**
	[1] 		// #사진참조(MergeSort1)
		- 데이터가 저장된 배열을 절반으로 나눔
		- 각각을 순환적으로 정렬
		- 정렬된 두 개의 배열을 합쳐 전체를 정렬
		
					A	L	G	O	R	I	T	H	M	S
			
			A	L	G	O	R				I	T	H	M	S	-- divide
	
			A	G	L	O	R				H	I	M	S	T	-- recursively sort
			
					A	G	H	I	L	M	O	R	S	T		-- merge
					
	[2] merge
		(1)
			i--------A[i] vs. A[j]----------j
			|								|
			A	G	L	O	R				H	I	M	S	T	-- 정렬된 두 배열
			
					_	_	_	_	_	_	_	_	_	_	-- 추가배열 이용
					|
					k
			
		(2)
				i--------A[i] vs. A[j]------j
				|							|
			A	G	L	O	R				H	I	M	S	T	-- 정렬된 두 배열
			
					A	_	_	_	_	_	_	_	_	_	-- 추가배열 이용
						|
						k	
		
		(3)
					i-----A[i] vs. A[j]-----j
					|						|
			A	G	L	O	R				H	I	M	S	T	-- 정렬된 두 배열
			
					A	G	_	_	_	_	_	_	_	_	-- 추가배열 이용
							|
							k
							
		(4)
					i-------A[i] vs. A[j]-------j
					|							|
			A	G	L	O	R				H	I	M	S	T	-- 정렬된 두 배열
			
					A	G	H	_	_	_	_	_	_	_	-- 추가배열 이용
								|
								k
								
		(5)
					i---------A[i] vs. A[j]---------j
					|								|
			A	G	L	O	R				H	I	M	S	T	-- 정렬된 두 배열
			
					A	G	H	I	_	_	_	_	_	_	-- 추가배열 이용
									|
									k
		
		(...)
									
		(10)
								i-----A[i] vs. A[j]-----j
								|						|
			A	G	L	O	R				H	I	M	S	T	-- 정렬된 두 배열
			
					A	G	H	I	L	M	O	R	_	_	-- 추가배열 이용
													|
													k
													
		(11)
								i---------A[i] vs. A[j]---------j
								|								|
			A	G	L	O	R				H	I	M	S	T	-- 정렬된 두 배열
			
					A	G	H	I	L	M	O	R	S	T	-- 추가배열 이용
															|
															k	// S, T는 한번에 주입
															
	[3] Design Sort
		mergeSort(A[], p, r) {		// A[p, ... , r] 을 정렬한다
			if( p < r ) then {
				q <- (p+q)/2;		---------------- 1)	p,q의 중간 지점 계산
				mergeSort(A, p, q);		------------ 2) 전반부 정렬
				mergeSort(A, q+1, r);	------------ 3) 후반부 정렬
				merge(A, p, q, r);	---------------- 4) 합병
			}
		}
		
		Merge(A[], p, q, r) {
			정렬되어 있는 두 배열 A[p, ... , q] 와 A[q+1, ... , r]을 합하여
			정렬된 하나의 배열 A[p, ... , r]을 만든다.
		}
		
	[4] 시간복잡도
				-- 0						--- if n = 1
		T(n) = -|
				-- T(n/2) + T(n/2) + n		--- otherwise